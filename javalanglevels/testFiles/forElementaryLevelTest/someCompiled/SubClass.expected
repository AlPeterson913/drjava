class SubClass extends SuperClass { //[1]
  private final int i; //[2]
  private final int j; //[3]

  /** This method is automatically generated by the Language Level Converter. */
  public SubClass(int super_, char super_0, int i, int j) {
    super(super_, super_0);
    this.i = i;
    this.j = j;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int i() {
    return i;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int j() {
    return j;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        i() + ", " + 
        j() + ", " + 
        k() + ", " + 
        c() + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      SubClass cast = ((SubClass) o);
      return (i() == cast.i()) && 
          (j() == cast.j()) && 
          (k() == cast.k()) && 
          (c() == cast.c());
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode() ^ 
        i() ^ 
        j() ^ 
        k() ^ 
        c();
  }
} //[4]