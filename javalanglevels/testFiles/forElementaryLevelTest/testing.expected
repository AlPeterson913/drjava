//this makes sure that autoboxing is correctly done in the case where the object type corresponding to the //[1]
//primitive is not in the symbol table. //[2]
//[3]
abstract class AList { //[4]

  /** This method is automatically generated by the Language Level Converter. */
  public AList() {
    super();
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      AList cast = ((AList) o);
      return true;
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode();
  }
} //[5]
//[6]
class Empty extends AList { //[7]

  /** This method is automatically generated by the Language Level Converter. */
  public Empty() {
    super();
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      Empty cast = ((Empty) o);
      return true;
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode();
  }
} //[8]
//[9]
class NonEmpty extends AList { //[10]
  private final Object first; //[11]
  private final AList rest; //[12]

  /** This method is automatically generated by the Language Level Converter. */
  public NonEmpty(java.lang.Object first, AList rest) {
    super();
    this.first = first;
    this.rest = rest;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.Object first() {
    return first;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public AList rest() {
    return rest;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        first() + ", " + 
        rest() + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      NonEmpty cast = ((NonEmpty) o);
      return (first() != null && first().equals(cast.first())) && 
          (rest() != null && rest().equals(cast.rest()));
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode() ^ 
        (first() == null ? 0 : first().hashCode()) ^ 
        (rest() == null ? 0 : rest().hashCode());
  }
} //[13]
//[14]
class UseLists { //[15]
  public int myMethod() {  //[16]
    final AList a = new NonEmpty(2, new Empty()); //[17]
    return 5; //[18]
  } //[19]

  /** This method is automatically generated by the Language Level Converter. */
  public UseLists() {
    super();
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      UseLists cast = ((UseLists) o);
      return true;
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode();
  }
} //[20]