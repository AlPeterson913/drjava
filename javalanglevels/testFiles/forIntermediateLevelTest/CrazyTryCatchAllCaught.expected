class CrazyTryCatchAllCaught {
  
  public int myMethod(final int i, final int j, final char c) {
    try {
      if (i+c < j) {
        throw new ClassNotFoundException("Someone had better catch me!");
      }
      try {
        if (c < j) {
          throw new CloneNotSupportedException("And someone had better catch me too!");
        }
        else if (i<j) {
          throw new InstantiationException("And me too!");
        }
        else throw new RuntimeException("No one needs to catch me");
      }
      catch (final InstantiationException e) {
        throw new RuntimeException("yeehah!");
      }
      
    }
    catch (final ClassNotFoundException e) {
      throw new RuntimeException("I caught your exception, but you don't have to catch me.");
    }
    catch (final CloneNotSupportedException e) {
      System.out.println("ohh yeah");
    }
    return 5;
  }
      

  /** This method is automatically generated by the Language Level Converter. */
  public CrazyTryCatchAllCaught() {
    super();
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      CrazyTryCatchAllCaught cast = ((CrazyTryCatchAllCaught) o);
      return true;
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode();
  }
}