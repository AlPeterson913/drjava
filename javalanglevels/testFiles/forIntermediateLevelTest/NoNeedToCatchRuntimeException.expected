class NoNeedToCatchRuntimeException { //[1]
  private final int i; //[2]
  //[3]
  /** //[4]
   * This method throws 2 runtime exceptions, so it should be okay. //[5]
   */ //[6]
  public int myMethod() { //[7]
    if (i<5) { //[8]
      throw new RuntimeException(); //[9]
    } //[10]
    else { //[11]
      throw new NullPointerException(); //[12]
    } //[13]
  } //[14]
  //[15]

  /** This method is automatically generated by the Language Level Converter. */
  public NoNeedToCatchRuntimeException(int i) {
    super();
    this.i = i;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int i() {
    return i;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        i() + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      NoNeedToCatchRuntimeException cast = ((NoNeedToCatchRuntimeException) o);
      return (i() == cast.i());
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode() ^ 
        i();
  }
} //[16]