class Empty implements OrdList {
  
  public OrdList createList() { return new Empty(); }

  public OrdList createList(final int i) { return new OrdNonEmpty(i); }
  
  public List add(final int i) { return new NonEmpty(i, this); }
  
   public OrdList insert(final int i) { return new OrdNonEmpty(i, this); }
   
   public boolean member(final int i) { return false; }

  /** This method is automatically generated by the Language Level Converter. */
  public Empty() {
    super();
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      Empty cast = ((Empty) o);
      return true;
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode();
  }
}

class NonEmpty implements List {
  private final int first;
  private final List rest;
  
//  NonEmpty(int i, List l) { 
//    first = i;
//    rest = l;
//  }
//  
  public OrdList createList() { return new Empty(); }
  
  public OrdList createList(final int i) { return new OrdNonEmpty(i); }
  
  public List add(final int i) { return new NonEmpty(i, this); }
  
  public boolean member(final int i) {
    if (i == first) return true;
    else return rest.member(i);
  }

  /** This method is automatically generated by the Language Level Converter. */
  public NonEmpty(int first, List rest) {
    super();
    this.first = first;
    this.rest = rest;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int first() {
    return first;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public List rest() {
    return rest;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        first() + ", " + 
        rest() + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      NonEmpty cast = ((NonEmpty) o);
      return (first() == cast.first()) && 
          (rest() != null && rest().equals(cast.rest()));
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode() ^ 
        first() ^ 
        (rest() == null ? 0 : rest().hashCode());
  }
}

class OrdNonEmpty extends NonEmpty implements OrdList {
  
  //private OrdNonEmpty(int i, List l) { super(i, l); }
    
  public OrdNonEmpty(final int i) { super(i, new Empty()); }
//  public OrdList createList() {  return super.createList(); }
//  public OrdList createList(int i) { return super.createList(i); }
  public OrdList insert(final int i) {  /* return type should be OrdList */
    if (i <= first()) return new OrdNonEmpty(i, this);
    else return new OrdNonEmpty(first(), ((OrdList) rest()).insert(i));
  }
  
  public boolean member(final int i) { return super.member(i); }

  /** This method is automatically generated by the Language Level Converter. */
  public OrdNonEmpty(int super_first, List super_rest) {
    super(super_first, super_rest);
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        first() + ", " + 
        rest() + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      OrdNonEmpty cast = ((OrdNonEmpty) o);
      return (first() == cast.first()) && 
          (rest() != null && rest().equals(cast.rest()));
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode() ^ 
        first() ^ 
        (rest() == null ? 0 : rest().hashCode());
  }
}
