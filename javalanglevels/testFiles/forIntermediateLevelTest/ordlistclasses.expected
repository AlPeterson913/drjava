class Empty implements OrdList { //[1]
  //[2]
  public OrdList createList() { return new Empty(); } //[3]
//[4]
  public OrdList createList(final int i) { return new OrdNonEmpty(i); } //[5]
  //[6]
  public List add(final int i) { return new NonEmpty(i, this); } //[7]
  //[8]
   public OrdList insert(final int i) { return new OrdNonEmpty(i, this); } //[9]
   //[10]
   public boolean member(final int i) { return false; } //[11]

  /** This method is automatically generated by the Language Level Converter. */
  public Empty() {
    super();
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      Empty cast = ((Empty) o);
      return true;
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode();
  }
} //[12]
//[13]
class NonEmpty implements List { //[14]
  private final int first; //[15]
  private final List rest; //[16]
  //[17]
//  NonEmpty(int i, List l) {  //[18]
//    first = i; //[19]
//    rest = l; //[20]
//  } //[21]
//   //[22]
  public OrdList createList() { return new Empty(); } //[23]
  //[24]
  public OrdList createList(final int i) { return new OrdNonEmpty(i); } //[25]
  //[26]
  public List add(final int i) { return new NonEmpty(i, this); } //[27]
  //[28]
  public boolean member(final int i) { //[29]
    if (i == first) return true; //[30]
    else return rest.member(i); //[31]
  } //[32]

  /** This method is automatically generated by the Language Level Converter. */
  public NonEmpty(int first, List rest) {
    super();
    this.first = first;
    this.rest = rest;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int first() {
    return first;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public List rest() {
    return rest;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        first() + ", " + 
        rest() + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      NonEmpty cast = ((NonEmpty) o);
      return (first() == cast.first()) && 
          (rest() != null && rest().equals(cast.rest()));
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode() ^ 
        first() ^ 
        (rest() == null ? 0 : rest().hashCode());
  }
} //[33]
//[34]
class OrdNonEmpty extends NonEmpty implements OrdList { //[35]
  //[36]
  //private OrdNonEmpty(int i, List l) { super(i, l); } //[37]
    //[38]
  public OrdNonEmpty(final int i) { super(i, new Empty()); } //[39]
//  public OrdList createList() {  return super.createList(); } //[40]
//  public OrdList createList(int i) { return super.createList(i); } //[41]
  public OrdList insert(final int i) {  /* return type should be OrdList */ //[42]
    if (i <= first()) return new OrdNonEmpty(i, this); //[43]
    else return new OrdNonEmpty(first(), ((OrdList) rest()).insert(i)); //[44]
  } //[45]
  //[46]
  public boolean member(final int i) { return super.member(i); } //[47]

  /** This method is automatically generated by the Language Level Converter. */
  public OrdNonEmpty(int super_first, List super_rest) {
    super(super_first, super_rest);
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        first() + ", " + 
        rest() + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      OrdNonEmpty cast = ((OrdNonEmpty) o);
      return (first() == cast.first()) && 
          (rest() != null && rest().equals(cast.rest()));
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode() ^ 
        first() ^ 
        (rest() == null ? 0 : rest().hashCode());
  }
}
