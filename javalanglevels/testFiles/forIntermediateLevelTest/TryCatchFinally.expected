class TryCatchFinally {
  public int booyah() throws ClassNotFoundException{
    final int i = 0,c = 6,j = 7;
    if (i+c < j) {
      throw new ClassNotFoundException("Someone had better catch me!");
    }
    try {
      if (c < j) {
        throw new CloneNotSupportedException("And someone had better catch me too!");
      }
      else throw new RuntimeException("No one needs to catch me");
    }
    catch (final RuntimeException e) {
    }
    
    finally {
      return 5;
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public TryCatchFinally() {
    super();
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      TryCatchFinally cast = ((TryCatchFinally) o);
      return true;
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode();
  }
}