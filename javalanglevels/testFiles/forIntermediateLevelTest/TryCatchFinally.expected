class TryCatchFinally { //[1]
  public int booyah() throws ClassNotFoundException{ //[2]
    final int i = 0,c = 6,j = 7; //[3]
    if (i+c < j) { //[4]
      throw new ClassNotFoundException("Someone had better catch me!"); //[5]
    } //[6]
    try { //[7]
      if (c < j) { //[8]
        throw new CloneNotSupportedException("And someone had better catch me too!"); //[9]
      } //[10]
      else throw new RuntimeException("No one needs to catch me"); //[11]
    } //[12]
    catch (final RuntimeException e) { //[13]
    } //[14]
    //[15]
    finally { //[16]
      return 5; //[17]
    } //[18]
  } //[19]

  /** This method is automatically generated by the Language Level Converter. */
  public TryCatchFinally() {
    super();
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      TryCatchFinally cast = ((TryCatchFinally) o);
      return true;
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode();
  }
} //[20]